class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode mid=middle(head);
        ListNode last=reverse(mid.next);
        ListNode start=head;
        while(last!=null){
            if(last.val!=start.val)
                return false;
            last=last.next;
            start=start.next;
        }
        return true;
    }
    public ListNode middle(ListNode head){
        ListNode slow=head;
        ListNode fast=head;
        
        while(fast.next!=null&&fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
    public ListNode reverse(ListNode node){
        ListNode prev=null;
        ListNode ahead=null;
        ListNode curr=node;
        while(curr!=null){
            ahead=curr.next;
            curr.next=prev;
            prev=curr;
            curr=ahead;
        }
        node=prev;
        return node;
    }
    public int count(ListNode head){
        int c=0;
        ListNode temp=head;
        while(temp!=null){
            c++;
            temp=temp.next;
        }
        return c;
    }
}
