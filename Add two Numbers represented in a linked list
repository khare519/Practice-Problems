class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
         ListNode curr;
        int sum=0;
        int carry=0;
        sum=l1.val+l2.val;
        if(sum>9){
            carry=1;
            curr=new ListNode(sum%10);
        }
        else{
            curr=new ListNode(sum);
        }
        l1=l1.next;
        l2=l2.next;
        ListNode temp;
        ListNode node=curr;
        while(l1!=null && l2!=null){
            sum=l1.val+l2.val+carry;
            if(sum>9){
                carry=1;
                temp=new ListNode(sum%10);
            }
            else{
                carry=0;
                temp=new ListNode(sum);
            }
            node.next=temp;
            node=node.next;
            l1=l1.next;
            l2=l2.next;
        }
        while(l1!=null){
            sum=l1.val+carry;
                if(sum>9){
                carry=1;
                temp=new ListNode(sum%10);
            }
            else{
                carry=0;
                temp=new ListNode(sum);
            }
            node.next=temp;
            node=node.next;
            l1=l1.next;
            
        }
         while(l2!=null){
            sum=l2.val+carry;
                if(sum>9){
                carry=1;
                temp=new ListNode(sum%10);
            }
            else{
                carry=0;
                temp=new ListNode(sum);
            }
            node.next=temp;
            node=node.next;
             
            l2=l2.next;
        }
        if(carry==1){
            temp=new ListNode(carry);
            node.next=temp;
        }
        return curr;
    }
}
