class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> result=new ArrayList<>();
        Arrays.sort(candidates);
        
        findCombination(0,target,new ArrayList<>(),candidates,result);

        return result;
    }
    public void findCombination(int index, int target, ArrayList<Integer> ds, int arr[], List<List<Integer>> result){
        if(target==0){
                result.add(new ArrayList<>(ds));
                return;
            }
                
        for(int i=index;i<arr.length;i++){
            if(i>index && arr[i]==arr[i-1]) continue;
            if(arr[i]>target)break;

            ds.add(arr[i]);
            findCombination(i+1,target-arr[i],ds,arr,result);
            ds.remove(ds.size()-1);
        }
    }
}
